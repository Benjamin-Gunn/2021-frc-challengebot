general:
  initial_teleop_mode: teleop_mode
  #  initial_teleop_mode: manual_mode

  states:
    sequences:
      priority_level_1: [sq_auto_gsc_a_blue, sq_auto_gsc_a_red, sq_auto_gsc_b_blue, sq_auto_gsc_b_red]
    parallels:
      priority_level_1: [ ]
    ss_drivetrain:
      priority_level_3: [st_drivetrain_zero]
      priority_level_2: [st_drivetrain_pure_pursuit_test]
      priority_level_1: [st_drivetrain_swerve_vector, st_drivetrain_swerve_math, st_drivetrain_swerve_matthew , st_drivetrain_gsc_a_blue, st_drivetrain_gsc_a_red, st_drivetrain_gsc_b_blue, st_drivetrain_gsc_b_red]
      default: [ ]

  subsystems: [ ss_drivetrain ]

  input_booleans: [ ipb_driver_back, ipb_driver_start, ipb_driver_a, ipb_driver_left_stick_button, ipb_driver_right_stick_button ]

  input_numerics: [ ipn_driver_left_y, ipn_driver_left_x, ipn_driver_right_y, ipn_driver_right_x ]

  input_vectors: [ ipv_navx,
                   ipv_drivetrain_front_right_angle, ipv_drivetrain_front_left_angle, ipv_drivetrain_back_left_angle, ipv_drivetrain_back_right_angle,
                   ipv_swerve_odometry ]

  output_numerics: [ opn_drivetrain_front_right_speed, opn_drivetrain_front_left_speed, opn_drivetrain_back_left_speed, opn_drivetrain_back_right_speed,
                     opn_drivetrain_front_right_angle, opn_drivetrain_front_left_angle, opn_drivetrain_back_left_angle, opn_drivetrain_back_right_angle ]

  output_booleans: [ ]

global_timing:
  frame_time_threshold_input_service: 80
  frame_time_threshold_logging_service: 80
  frame_time_threshold_output_service: 80
  frame_time_threshold_state_service: 80
  frame_time_threshold_webdashboard_service: 80
  frame_cycle_time_threshold_core_thread: 80
  frame_cycle_time_threshold_info_thread: 80

global_drivetrain_swerve_math:
  x_left_js: ipn_driver_left_x
  y_left_js: ipn_driver_left_y
  x_right_js: ipn_driver_right_x
  y_right_js: ipn_driver_right_y
  robot_length: 18.5
  robot_width: 16.5
  navx: ipv_navx

global_drivetrain_swerve_vector:
  swerve_x: ipn_driver_left_x
  swerve_y: ipn_driver_left_y
  swerve_rotate: ipn_driver_right_x
  swerve_field_oriented_button: ipb_driver_start
  navx: ipv_navx
  # The robot is centered on the x,y axis with the front of the robot pointing towards 0 on the unit circle
  #  In order of front right, front left, back left, back right
  module_positions: [ [ 9.25, -8.25 ], [ 9.25, 8.25 ], [ -9.25, 8.25 ], [ -9.25, -8.25 ] ]
  input_angle_names: [ "ipn_drivetrain_front_right_angle", "ipn_drivetrain_front_left_angle", "ipn_drivetrain_back_left_angle", "ipn_drivetrain_back_right_angle" ]
  input_speed_names: [ "ipn_drivetrain_front_right_speed", "ipn_drivetrain_front_left_speed", "ipn_drivetrain_back_left_speed", "ipn_drivetrain_back_right_speed" ]
  output_angle_names: [ "opn_drivetrain_front_right_angle", "opn_drivetrain_front_left_angle", "opn_drivetrain_back_left_angle", "opn_drivetrain_back_right_angle" ]
  output_speed_names: [ "opn_drivetrain_front_right_speed", "opn_drivetrain_front_left_speed", "opn_drivetrain_back_left_speed", "opn_drivetrain_back_right_speed" ]

global_drivetrain_Matthew:
  module_positions: [ [ 9.25, -8.25 ], [ 9.25, 8.25 ], [ -9.25, 8.25 ], [ -9.25, -8.25 ] ]
  input_angle_names: [ ipv_drivetrain_front_right_angle, ipv_drivetrain_front_left_angle, ipv_drivetrain_back_left_angle, ipv_drivetrain_back_right_angle ]
  input_position_names: [ ipn_drivetrain_front_right_angle_position, ipn_drivetrain_front_left_angle_position, ipn_drivetrain_back_left_angle_position, ipn_drivetrain_back_left_angle_position]
  output_angle_names: [ opn_drivetrain_front_right_angle, opn_drivetrain_front_left_angle, opn_drivetrain_back_left_angle, opn_drivetrain_back_right_angle ]
  output_speed_names: [ opn_drivetrain_front_right_speed, opn_drivetrain_front_left_speed, opn_drivetrain_back_left_speed, opn_drivetrain_back_right_speed ]
  navx: ipv_navx
  odometry: ipv_swerve_odometry
  heading_controller: pr_swerve_heading
  swerve_x: ipn_driver_left_x
  swerve_y: ipn_driver_left_y
  swerve_rotate: ipn_driver_right_x
  swerve_field_oriented_button: ipb_driver_start


log:
#  ips_selected_auto: true

global_webdashboard:

  auto_selector:
    origins: [gsc]
    destinations: [a, b]
    actions: [blue, red]

  match_values:

